C51 COMPILER V9.59.0.0   PUBLICMODE                                                        09/19/2018 11:25:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PUBLICMODE
OBJECT MODULE PLACED IN .\Objects\PublicMode.obj
COMPILER INVOKED BY: F:\Keil_v5_C51\C51\BIN\C51.EXE ..\Mode\src\PublicMode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Protocol
                    -;..\Mode\inc;..\MyLib\inc;..\Lib\inc;..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\PublicMode.lst) TABS(2) OBJECT(.\Objec
                    -ts\PublicMode.obj)

line level    source

   1          #include "STC8A8K32S4A12.h"
   2          
   3          #include "PublicMode.h"
   4          #include "PrivateMode.h"
   5          #include "PublicFunction.h"
   6          #include "Packet.h"
   7          #include "Order.h"
   8          #include "Usart.h"
   9          #include "Gprs.h"
  10          #include "EEPROM.h"
  11          #include "Delay.h"
  12          
  13          #include "string.h"
  14          #include "ctype.h"
  15          
  16          void PublicMode_Start(void)
  17          {
  18   1          int ValveFlag = OFF;
  19   1          Valve_Switch(OFF);
  20   1          IapErase(EEPROM_DeviceMode);
  21   1          IapProgram(EEPROM_DeviceMode, MODE_PUBLIC);
  22   1          AUXR &= ~0x10;  //Áî®Êà∑ÂºÄÂßãÁî®Ê∞¥ÂÆöÊó∂Âô®ÂÖ≥Èó≠
  23   1          T4T3M &= ~0x08; //Áî®Êà∑ÁªìÊùüÁî®Ê∞¥ÂÆöÊó∂Âô®ÂºÄÂêØ
  24   1      
  25   1          while (1)
  26   1          {
  27   2              //Uart1_Send_Data("AT\r\n");
  28   2              if (HeartPacketBool == True)
  29   2              {
  30   3                  GPRS_SendHeartPacket();
  31   3                  HeartPacketBool = False;
  32   3                  Send_OK_Flag = True;
  33   3              }
  34   2              if ((IapRead(EEPROM_DeviceStatus)) == STATUS_WAITACTIVATION)
  35   2              {
  36   3                  if (Order == COMMAND_SYSTEMINIT)
  37   3                  {
  38   4                      Valve_Switch(OFF);
  39   4                      SystemInit_PacketData();
  40   4                      GPRS_SendData(COMMAND_RECV_SYSTEMINIT, DeviceMode, DeviceStatus); //ÂêëÊúçÂä°Âô®‰∏ä‰º†Ê®°Â
             -ºèÂàáÊç¢ÂëΩ‰ª§ÂõûÊâß
  41   4                      Order = COMMAND_MODESWITCH;
  42   4                      return;
  43   4                  }
  44   3                  else if (Order == COMMAND_ERRORUPLOAD)
  45   3                  {
  46   4                      DeviceMode = IapRead(EEPROM_DeviceMode);
  47   4                      DeviceStatus = IapRead(EEPROM_DeviceStatus);
  48   4                      GPRS_SendData(COMMAND_ERRORUPLOAD, DeviceMode, DeviceStatus);
  49   4                      Order = COMMAND_HEARTBEATPACKET;
  50   4                  }
  51   3              }
  52   2              else
C51 COMPILER V9.59.0.0   PUBLICMODE                                                        09/19/2018 11:25:18 PAGE 2   

  53   2              {
  54   3                  if (Order == COMMAND_ERRORUPLOAD)
  55   3                  {
  56   4                      DeviceMode = IapRead(EEPROM_DeviceMode);
  57   4                      DeviceStatus = IapRead(EEPROM_DeviceStatus);
  58   4                      GPRS_SendData(COMMAND_ERRORUPLOAD, DeviceMode, DeviceStatus);
  59   4                      Order = COMMAND_HEARTBEATPACKET;
  60   4                  }
  61   3                  else if (Order == COMMAND_DEVICECLOSE) //ÂÖ≥Êú∫ÂëΩ‰ª§
  62   3                  {
  63   4                      Valve_Switch(OFF);
  64   4                      DeviceStatus = STATUS_CLOSEDEVICE;
  65   4                      IapErase(EEPROM_DeviceStatus);
  66   4                      IapProgram(EEPROM_DeviceStatus, STATUS_CLOSEDEVICE);
  67   4                      GPRS_SendData(COMMAND_RECV_DEVICECLOSE, MODE_PUBLIC, STATUS_CLOSEDEVICE); //ÂêëÊúçÂä°Âô®‰∏
             -ä‰º†ÂÖ≥Êú∫ÂëΩ‰ª§ÂõûÊâß
  68   4                      Order = COMMAND_HEARTBEATPACKET;
  69   4                  }
  70   3                  else if (Order == COMMAND_DEVICEOPEN) //ÂºÄÊú∫ÂëΩ‰ª§
  71   3                  {
  72   4                      Valve_Switch(OFF);
  73   4                      DeviceStatus = STATUS_OPENDEVICE;
  74   4                      IapErase(EEPROM_DeviceStatus);
  75   4                      IapProgram(EEPROM_DeviceStatus, STATUS_OPENDEVICE);
  76   4                      GPRS_SendData(COMMAND_RECV_DEVICEOPEN, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä‰
             -º†ÂºÄÊú∫ÂëΩ‰ª§ÂõûÊâß
  77   4                      Order = COMMAND_HEARTBEATPACKET;
  78   4                  }
  79   3                  else if (Order == COMMAND_SYSTEMINIT) //Ê®°ÂºèÂàáÊç¢
  80   3                  {
  81   4                      Valve_Switch(OFF);
  82   4                      SystemInit_PacketData();
  83   4                      GPRS_SendData(COMMAND_RECV_SYSTEMINIT, DeviceMode, DeviceStatus); //ÂêëÊúçÂä°Âô®‰∏ä‰º†Ê®°Â
             -ºèÂàáÊç¢ÂëΩ‰ª§ÂõûÊâß
  84   4                      Order = COMMAND_MODESWITCH;
  85   4                      return;
  86   4                  }
  87   3                  else if (Order == COMMAND_RECOVERY) //ÊÅ¢Â§çÂá∫ÂéÇËÆæÁΩÆ
  88   3                  {
  89   4                      Valve_Switch(OFF);
  90   4                      Recovery_PacketData();
  91   4                      GPRS_SendData(COMMAND_RECV_RECOVERY, DeviceMode, STATUS_RECOVERY); //ÂêëÊúçÂä°Âô®‰∏ä‰º†ÊÅ¢
             -Â§çÂá∫ÂéÇËÆæÁΩÆÂõûÊâß
  92   4                      Order = COMMAND_HEARTBEATPACKET;
  93   4                      return;
  94   4                  }
  95   3                  else if (Order == COMMAND_DEVICEINFOR) //Êü•ËØ¢ËÆæÂ§á‰ø°ÊÅØ
  96   3                  {
  97   4                      DeviceMode = IapRead(EEPROM_DeviceMode);
  98   4                      DeviceStatus = IapRead(EEPROM_DeviceStatus);
  99   4                      GPRS_SendData(COMMAND_RECV_DEVICEINFOR, DeviceMode, DeviceStatus); //ÂêëÊúçÂä°Âô®‰∏ä‰º†Ê®°
             -ÂºèÂàáÊç¢ÂõûÊâß
 100   4                      Order = COMMAND_HEARTBEATPACKET;
 101   4                  }
 102   3                  else if (Order == COMMAND_DEVICELOCK) //Êú∫Âô®ÈîÅÂÆöÂëΩ‰ª§
 103   3                  {
 104   4                      Valve_Switch(OFF);
 105   4                      if (Lock == ON)
 106   4                      {
 107   5                          DeviceStatus = STATUS_LOCKDEVICE; //Êé•Êî∂Êú∫Âô®ÈîÅÂÆöÂëΩ‰ª§ÔºåÂÖ≥Èó≠ËÑâÂÜ≤ÈòÄ
 108   5                          IapErase(EEPROM_DeviceStatus);
 109   5                          IapProgram(EEPROM_DeviceStatus, STATUS_LOCKDEVICE);
C51 COMPILER V9.59.0.0   PUBLICMODE                                                        09/19/2018 11:25:18 PAGE 3   

 110   5                          Lock = OFF;
 111   5                      }
 112   4                      else if (Lock == OFF)
 113   4                      {
 114   5                          DeviceStatus = STATUS_OPENDEVICE;
 115   5                          IapErase(EEPROM_DeviceStatus);
 116   5                          IapProgram(EEPROM_DeviceStatus, STATUS_OPENDEVICE);
 117   5                          Lock = ON;
 118   5                      }
 119   4                      GPRS_SendData(COMMAND_RECV_DEVICELOCK, MODE_PUBLIC, DeviceStatus); //ÂêëÊúçÂä°Âô®‰∏ä‰º†Êú∫
             -Âô®ÈîÅÂÆöÂõûÊâß
 120   4                      Order = COMMAND_HEARTBEATPACKET;
 121   4                  }
 122   3                  else if (Order == COMMAND_USEWATER) //ÂèñÊ∞¥ÂëΩ‰ª§
 123   3                  {
 124   4                      DeviceStatus = STATUS_OPENDEVICE;
 125   4                      IapErase(EEPROM_DeviceStatus);
 126   4                      IapProgram(EEPROM_DeviceStatus, STATUS_OPENDEVICE);
 127   4                      ValveCountDown = Flow_to_Valve_PublicMode();
 128   4      
 129   4                      Valve_Switch(ON);
 130   4                      ValveCount = 0;
 131   4                      GPRS_SendData(COMMAND_RECV_USEWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä‰º†
             -ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 132   4                      PollTimer_Stop = 0;
 133   4                      PollTimer_Start_Stop = 0;
 134   4                      T4T3M |= 0x08; //Áî®Êà∑ÁªìÊùüÁî®Ê∞¥ÂÆöÊó∂Âô®ÂºÄÂêØ
 135   4                      while (1)
 136   4                      {
 137   5                          if (Order == COMMAND_STOPWATER)
 138   5                          {
 139   6                              Valve_Switch(OFF);
 140   6                              //ValveFlag = ON;
 141   6                              GPRS_SendData(COMMAND_RECV_STOPWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°
             -Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 142   6                              //if (DeviceFlow_01 != 0x00 && DeviceFlow_02 != 0x00)
 143   6                              //GPRS_SendData(COMMAND_USEWATERUPLOAD, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂ
             -ä°Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 144   6                              goto STOPWATER;
 145   6                          }
 146   5                          else if (Order == COMMAND_ERRORUPLOAD)
 147   5                          {
 148   6                              DeviceMode = IapRead(EEPROM_DeviceMode);
 149   6                              DeviceStatus = IapRead(EEPROM_DeviceStatus);
 150   6                              GPRS_SendData(COMMAND_ERRORUPLOAD, DeviceMode, DeviceStatus);
 151   6                              Order = COMMAND_HEARTBEATPACKET;
 152   6                          }
 153   5                          if (ValveCountDown <= 0)
 154   5                          {
 155   6                              Valve_Switch(OFF);
 156   6                              ValveFlag = ON;
 157   6                              ValveCountDown = 0;
 158   6                              //GPRS_SendData(COMMAND_RECV_STOPWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂ
             -ä°Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 159   6                              //if (DeviceFlow_01 != 0x00 && DeviceFlow_02 != 0x00)
 160   6                              //GPRS_SendData(COMMAND_USEWATERUPLOAD, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂ
             -ä°Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 161   6                              //goto STOPWATER;
 162   6                          }
 163   5                          if (StopBool == True)
 164   5                          {
 165   6                              StopBool = False;
C51 COMPILER V9.59.0.0   PUBLICMODE                                                        09/19/2018 11:25:18 PAGE 4   

 166   6                              //Valve_Switch(OFF);
 167   6                              //GPRS_SendData(COMMAND_RECV_STOPWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂ
             -ä°Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 168   6                              if (ValveCountDown <= 0)
 169   6                                  ValveCountDown = 0;
 170   6                              if (ValveCount != 0)
 171   6                                  GPRS_SendData(COMMAND_USEWATERUPLOAD, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊú
             -çÂä°Âô®‰∏ä‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 172   6                              ValveCount = 0;
 173   6                              if (ValveFlag == ON)
 174   6                              {
 175   7                                  ValveFlag = OFF;
 176   7                                  goto STOPWATER;
 177   7                              }
 178   6                              T4T3M |= 0x08;
 179   6                              //ValveCountDown = 0;
 180   6                          }
 181   5                          //goto STOPWATER;
 182   5                      }
 183   4      
 184   4                  STOPWATER:
 185   4                      AUXR &= ~0x10; //Áî®Êà∑ÂºÄÂßãÁî®Ê∞¥ÂÆöÊó∂Âô®ÂÖ≥Èó≠
 186   4                      T4T3M |= 0x08;
 187   4                      //DeviceStatus = STATUS_OPENDEVICE;
 188   4      
 189   4                      ValveAll_H = Get_Long_H(ValveAll);
 190   4                      ValveAll_M1 = Get_Long_M1(ValveAll);
 191   4                      ValveAll_M2 = Get_Long_M2(ValveAll);
 192   4                      ValveAll_L = Get_Long_L(ValveAll);
 193   4      
 194   4                      IapErase(EEPROM_VavleALL);
 195   4                      IapProgram(EEPROM_Vavle, ValveAll_H);
 196   4                      IapProgram(EEPROM_Vavle + 1, ValveAll_M1);
 197   4                      IapProgram(EEPROM_Vavle + 2, ValveAll_M2);
 198   4                      IapProgram(EEPROM_Vavle + 3, ValveAll_L);
 199   4                      //GPRS_SendData(COMMAND_RECV_STOPWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä
             -‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 200   4                      //GPRS_SendData(COMMAND_USEWATERUPLOAD, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä
             -‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 201   4                      ValveCount = 0;
 202   4                      ValveCountDown = 0;
 203   4                      DeviceFlow_01 = 0x00;
 204   4                      DeviceFlow_02 = 0x00;
 205   4      
 206   4                      Order = COMMAND_HEARTBEATPACKET;
 207   4                  }
 208   3                  else if (Order == COMMAND_STOPWATER)
 209   3                  {
 210   4                      GPRS_SendData(COMMAND_RECV_STOPWATER, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä‰º
             -†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 211   4                      //GPRS_SendData(COMMAND_USEWATERUPLOAD, MODE_PUBLIC, STATUS_OPENDEVICE); //ÂêëÊúçÂä°Âô®‰∏ä
             -‰º†ÂèñÊ∞¥ÂëΩ‰ª§ÂõûÊâß
 212   4                      Order = COMMAND_HEARTBEATPACKET;
 213   4                  }
 214   3              }
 215   2      
 216   2              if ((RECV_Return("CLOSED", NULL) == True) || (RECV_Return_Special("CLOSED", NULL) == True))
 217   2              {
 218   3                  GPRS_ConnectClose();
 219   3                  GPRS_ConnectCreat(IP, Port);
 220   3                  IapRead(EEPROM_DeviceMode);
 221   3                  IapRead(EEPROM_DeviceStatus);
C51 COMPILER V9.59.0.0   PUBLICMODE                                                        09/19/2018 11:25:18 PAGE 5   

 222   3                  GPRS_SendData(COMMAND_HEARTBEATPACKET, DeviceMode, DeviceStatus);
 223   3                  Send_OK_Flag = True;
 224   3                  Order = COMMAND_MODESWITCH;
 225   3                  Clear_Buf(Rx_Buffer_AT);
 226   3                  Clear_Buf(Rx_Buffer);
 227   3                  return;
 228   3              }
 229   2              if ((RECV_Return("PDP:", NULL) == True) || (RECV_Return_Special("PDP:", NULL) == True))
 230   2              {
 231   3                  GPRS_ConnectClose();
 232   3                  GPRS_ConnectCreat(IP, Port);
 233   3                  IapRead(EEPROM_DeviceMode);
 234   3                  IapRead(EEPROM_DeviceStatus);
 235   3                  GPRS_SendData(COMMAND_HEARTBEATPACKET, DeviceMode, DeviceStatus);
 236   3                  Send_OK_Flag = True;
 237   3                  Order = COMMAND_MODESWITCH;
 238   3                  Clear_Buf(Rx_Buffer_AT);
 239   3                  Clear_Buf(Rx_Buffer);
 240   3                  return;
 241   3              }
 242   2          }
 243   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1054    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
